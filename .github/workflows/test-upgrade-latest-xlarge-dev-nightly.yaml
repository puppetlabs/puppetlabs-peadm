---
name: Upgrade to latest dev test nightly
on:
  schedule:
    - cron: 0 3 * * *
jobs:
  test-upgrade:
    name: PE ${{ matrix.version }} to nightly dev using ${{ matrix.architecture }}
      on ${{ matrix.image }}
    runs-on: ubuntu-20.04
    env:
      BOLT_GEM: true
      BOLT_DISABLE_ANALYTICS: true
      LANG: en_US.UTF-8
    strategy:
      fail-fast: false
      matrix:
        architecture: [extra-large-with-dr]
        version: [2023.8.2]
        image: [almalinux-cloud/almalinux-8]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Activate Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true
      - name: Print bundle environment
        if: ${{ github.repository_owner == 'puppetlabs' }}
        run: |
          echo ::group::info:bundler
            bundle env
          echo ::endgroup::
      - name: Provision test cluster
        timeout-minutes: 15
        run: |
          echo ::group::prepare
            mkdir -p $HOME/.ssh
            echo 'Host *'                      >  $HOME/.ssh/config
            echo '    ServerAliveInterval 150' >> $HOME/.ssh/config
            echo '    ServerAliveCountMax 2'   >> $HOME/.ssh/config
            bundle exec rake spec_prep
          echo ::endgroup::
          echo ::group::provision
            bundle exec bolt plan run peadm_spec::provision_test_cluster \
              --modulepath spec/fixtures/modules \
              provider=provision_service \
              image=${{ matrix.image }} \
              architecture=${{ matrix.architecture }}
          echo ::endgroup::
          echo ::group::info:request
            cat request.json || true; echo
          echo ::endgroup::
          echo ::group::info:inventory
            sed -e 's/password: .*/password: "[redacted]"/' < spec/fixtures/litmus_inventory.yaml || true
          echo ::endgroup::
      - name: Install PE on test cluster
        timeout-minutes: 120
        run: |
          bundle exec bolt plan run peadm_spec::install_test_cluster \
            --inventoryfile spec/fixtures/litmus_inventory.yaml \
            --modulepath spec/fixtures/modules \
            architecture=${{ matrix.architecture }} \
            version=${{ matrix.version }} \
            console_password=${{ secrets.CONSOLE_PASSWORD }}
      - name: Activate twingate to obtain unreleased build
        uses: twingate/github-action@main
        with:
          service-key: ${{ secrets.TWINGATE_PUBLIC_REPO_KEY }}
      - name: Get latest build name
        id: latest
        run: |
          echo "::set-output name=ver::$(curl -q https://artifactory.delivery.puppetlabs.net/artifactory/generic_enterprise__local/main/ci-ready/LATEST)"
      - name: Upgrade PE on test cluster
        timeout-minutes: 120
        run: |
          bundle exec bolt plan run peadm_spec::upgrade_test_cluster \
            --inventoryfile spec/fixtures/litmus_inventory.yaml \
            --modulepath spec/fixtures/modules \
            permit_unsafe_versions=true \
            download_mode="bolthost" \
            architecture=${{ matrix.architecture }} \
            pe_installer_source="https://artifactory.delivery.puppetlabs.net/artifactory/generic_enterprise__local/main/ci-ready/puppet-enterprise-${{ steps.latest.outputs.ver }}-el-8-x86_64.tar"
      - name: Tear down test cluster
        if: ${{ always() }}
        continue-on-error: true
        run: |-
          if [ -f spec/fixtures/litmus_inventory.yaml ]; then
            echo ::group::tear_down
              bundle exec rake 'litmus:tear_down'
            echo ::endgroup::
            echo ::group::info:request
              cat request.json || true; echo
            echo ::endgroup::
          fi
